index.js => entry point 

App.jsx => main component file => all component will include in this App component

component => functional , class 
(component used in html tag format )

jsx => js extension 

props=> immutable => can not change, 

state => mutable => can be changed, 

import/export  => default export , named export(object type export)

Calculator application: 

virtualDom => 
diffing algorithm => useful to compare b/w actual and virtual dom copy
reconcilation 


                               App (virtual dom copy ) => copy actual compare

                            div          h1 
                        h2       h3
                   

                        App
                    parent ()
                    child (x =10)
                    child1
                    child2
 sending a prop from parent to nested children component => prop drilling
 send a prop from child to parent => prop lifting

 context api  => solution for prop drilling 

 from child to parent (value) => make function in parent , send it to prop to child, then call it in child component


                                App  (main)
                            parent 
                            child 
                            
                            A (n1)      B      C 
                        A1 b1 C1  A2 B2     A3 C3
                        A2 B2
                            B3 n1 = 10


read about "key" prop used in loops.
read about "state".


Basic class component=> lifecycle phases

Hooks => 16.8  

hooks are the first thing that can ne written on the fisrt line of component

1- useState Hook: const [state, setState] = useState(initialValue);

class component / functional component => dumb component

stateful component  / stateless component